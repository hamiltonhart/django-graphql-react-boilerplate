{"ast":null,"code":"import _taggedTemplateLiteral from \"/Volumes/Ravenclaw/_d_Development/Work/django-react-graphql-boilerplate/django-react-boilerplate/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Volumes/Ravenclaw/_d_Development/Work/django-react-graphql-boilerplate/django-react-boilerplate/src/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n    isLoggedIn @client\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport './App.css';\nimport Auth from './components/Auth';\nimport Primary from './components/Primary';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\n\nfunction App() {\n  const _useQuery = useQuery(IS_LOGGED_IN_QUERY),\n        data = _useQuery.data,\n        loading = _useQuery.loading,\n        error = _useQuery.error;\n\n  if (loading) return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Loading\");\n  if (error) return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Error: \", error);\n  return data.isLoggedIn ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Logged In!\") : React.createElement(Auth, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  });\n}\n\nconst IS_LOGGED_IN_QUERY = gql(_templateObject());\nexport default App;","map":{"version":3,"sources":["/Volumes/Ravenclaw/_d_Development/Work/django-react-graphql-boilerplate/django-react-boilerplate/src/App.js"],"names":["React","Auth","Primary","useQuery","gql","App","IS_LOGGED_IN_QUERY","data","loading","error","isLoggedIn"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,SAAQC,GAAR,QAAkB,cAAlB;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACkBF,QAAQ,CAACG,kBAAD,CAD1B;AAAA,QACNC,IADM,aACNA,IADM;AAAA,QACAC,OADA,aACAA,OADA;AAAA,QACSC,KADT,aACSA,KADT;;AAGb,MAAGD,OAAH,EAAY,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACZ,MAAGC,KAAH,EAAU,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYA,KAAZ,CAAP;AACV,SACEF,IAAI,CAACG,UAAL,GAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAlB,GAAwC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD1C;AAGD;;AAED,MAAMJ,kBAAkB,GAAGF,GAAH,mBAAxB;AAOA,eAAeC,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Auth from './components/Auth';\nimport Primary from './components/Primary';\n\nimport {useQuery} from '@apollo/react-hooks';\nimport {gql} from 'apollo-boost';\n\nfunction App() {\n  const {data, loading, error} = useQuery(IS_LOGGED_IN_QUERY);\n\n  if(loading) return <h1>Loading</h1>\n  if(error) return <h1>Error: {error}</h1>\n  return (\n   (data.isLoggedIn ? <h1>Logged In!</h1> : <Auth />)\n  );\n}\n\nconst IS_LOGGED_IN_QUERY = gql`\n  {\n    isLoggedIn @client\n  }\n`;\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}