{"ast":null,"code":"import _taggedTemplateLiteral from \"/Volumes/Ravenclaw/_d_Development/Work/django-react-graphql-boilerplate/django-react-boilerplate/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Volumes/Ravenclaw/_d_Development/Work/django-react-graphql-boilerplate/django-react-boilerplate/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Volumes/Ravenclaw/_d_Development/Work/django-react-graphql-boilerplate/django-react-boilerplate/src/components/Auth/Login.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation($username: String!, $password: String!){\\n    tokenAuth(username: $username, password: $password){\\n      token\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\n\nconst Login = () => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        username = _useState2[0],\n        setUsername = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(username, password);\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"username\",\n    onChange: e => setUsername(e.target.value),\n    value: username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"password\",\n    onChange: e => setPassword(e.target.value),\n    value: password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nconst TOKEN_AUTH_MUTATION = gql(_templateObject());\nexport default Login;","map":{"version":3,"sources":["/Volumes/Ravenclaw/_d_Development/Work/django-react-graphql-boilerplate/django-react-boilerplate/src/components/Auth/Login.js"],"names":["React","useState","useQuery","gql","Login","username","setUsername","password","setPassword","handleSubmit","e","preventDefault","console","log","target","value","TOKEN_AUTH_MUTATION"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA,oBACcH,QAAQ,CAAC,EAAD,CADtB;AAAA;AAAA,QACXI,QADW;AAAA,QACDC,WADC;;AAAA,qBAEcL,QAAQ,CAAC,EAAD,CAFtB;AAAA;AAAA,QAEXM,QAFW;AAAA,QAEDC,WAFC;;AAIlB,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ,EAAsBE,QAAtB;AACD,GAHD;;AAKA,SACE;AAAM,IAAA,QAAQ,EAAEG,CAAC,IAAID,YAAY,CAACC,CAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,QAAQ,EAAEA,CAAC,IAAIJ,WAAW,CAACI,CAAC,CAACI,MAAF,CAASC,KAAV,CAH5B;AAIE,IAAA,KAAK,EAAEV,QAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,QAAQ,EAAEK,CAAC,IAAIF,WAAW,CAACE,CAAC,CAACI,MAAF,CAASC,KAAV,CAH5B;AAIE,IAAA,KAAK,EAAER,QAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAaE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,CADF;AAiBD,CA1BD;;AA4BA,MAAMS,mBAAmB,GAAGb,GAAH,mBAAzB;AAQA,eAAeC,KAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\n\nconst Login = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(username, password);\n  };\n\n  return (\n    <form onSubmit={e => handleSubmit(e)}>\n      <input\n        type=\"text\"\n        placeholder=\"username\"\n        onChange={e => setUsername(e.target.value)}\n        value={username}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"password\"\n        onChange={e => setPassword(e.target.value)}\n        value={password}\n      />\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nconst TOKEN_AUTH_MUTATION = gql`\n  mutation($username: String!, $password: String!){\n    tokenAuth(username: $username, password: $password){\n      token\n    }\n  }\n`;\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}